#Affine transform calculated from three pairs of corresponding points
import cv2
import numpy as np
def affine_transform(image, pts_src, pts_dst): 
    matrix = cv2.getAffineTransform(pts_src, pts_dst)
    transformed_image = cv2.warpAffine(image, matrix, (image.shape[1], image.shape[0])) 
    return transformed_image
# Usage: Provide three pairs of corresponding points 
image = cv2.imread(r<link>)
src_points = np.float32([[50, 50], [200, 50], [50, 200]])
dst_points = np.float32([[10, 100], [200, 50], [100, 250]])
affine_transformed = affine_transform(image, src_points, dst_points) 
cv2.imshow("Affine Transformed Image", affine_transformed)
cv2.waitKey(0)
cv2.destroyAllWindows()
