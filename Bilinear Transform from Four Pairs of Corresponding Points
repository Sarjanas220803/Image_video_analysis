#Bilinear transform calculated from four pairs of corresponding points.
import cv2
import numpy as np
def bilinear_transform(image, pts_src, pts_dst):
    matrix = cv2.getPerspectiveTransform(pts_src, pts_dst)
    transformed_image = cv2.warpPerspective(image, matrix, (image.shape[1], image.shape[0])) 
    return transformed_image
# Usage: Provide four pairs of corresponding points 
image = cv2.imread(r<link>)
src_points = np.float32([[56, 65], [368, 52], [28, 387], [389, 390]])
dst_points = np.float32([[0, 0], [300, 0], [0, 300], [300, 300]])
bilinear_transformed = bilinear_transform(image, src_points, dst_points) 
cv2.imshow("Bilinear Transformed Image", bilinear_transformed)
cv2.waitKey(0)
cv2.destroyAllWindows()
